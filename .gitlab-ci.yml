variables:
  IMAGE_NAME: 'kelsiem.com/logstash-input-okta_system_log'
  GITLAB_API_PATH: 'api/v4'
  Region: 'ap-southeast-2'
  GITLAB_TOKEN: 'qfNHZ6QWQLm98mJJGSPB'



stages:
  - build_test
  - deploy




Merge Request Feature to develop:
  stage: build_test
  script:
    - echo CI_COMMIT_REF_NAME is $CI_COMMIT_REF_NAME
    - THIS_MERGE_ID=`curl -s -X POST 'https://gitlab.kelsiem.io/'$GITLAB_API_PATH'/projects/'$CI_PROJECT_ID'/merge_requests' -H "Content-Type:application/json" -H 'PRIVATE-TOKEN:'$GITLAB_TOKEN --data '{"source_branch":"'$CI_COMMIT_REF_NAME'","target_branch":"develop","title":"merge '$CI_COMMIT_REF_NAME' to develop in '$IMAGE_NAME'"}' | jq -r ".iid"`
  only:
    - /^feature\/.*$/



Merge Request Develop to Test:
  stage: build_test
  script:
    - echo CI_COMMIT_REF_NAME is $CI_COMMIT_REF_NAME
    - THIS_MERGE_ID=`curl -s -X POST 'https://gitlab.kelsiem.io/'$GITLAB_API_PATH'/projects/'$CI_PROJECT_ID'/merge_requests' -H "Content-Type:application/json" -H 'PRIVATE-TOKEN:'$GITLAB_TOKEN --data '{"source_branch":"develop","target_branch":"test","title":"merge develop to test in '$IMAGE_NAME'"}' | jq -r ".iid"`
  only:
    - develop



Merge Request Test To Master:
  stage: build_test
  script:
    - echo CI_COMMIT_REF_NAME is $CI_COMMIT_REF_NAME
    - THIS_MERGE_ID=`curl -s -X POST 'https://gitlab.kelsiem.io/'$GITLAB_API_PATH'/projects/'$CI_PROJECT_ID'/merge_requests' -H "Content-Type:application/json" -H 'PRIVATE-TOKEN:'$GITLAB_TOKEN --data '{"source_branch":"test","target_branch":"master","title":"merge test to master in '$IMAGE_NAME'"}' | jq -r ".iid"`
  only:
    - test






Build and Push Base Image:
  stage: build_test
  script:
    # The following is for Amazon's registry
    - sudo $(sudo aws ecr get-login --region $Region --registry-ids 137112412989 | awk '{printf $1" "$2" "$3" "$4" "$5" "$6" "$9}')
    # The following is for my registry
    - sudo $(sudo aws ecr get-login | awk '{printf $1" "$2" "$3" "$4" "$5" "$6" "$9}')
    - sudo docker build -f 0-base.Dockerfile -t $IMAGE_NAME:base .

    - sudo docker tag $IMAGE_NAME:build 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:base
    - sudo docker push 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:base || sudo aws ecr create-repository --repository-name $IMAGE_NAME --region $Region; sudo docker push 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:base
    - sudo docker tag $IMAGE_NAME:build 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:Pipeline_$CI_PIPELINE_ID
    - sudo docker push 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:Pipeline_$CI_PIPELINE_ID
  when: manual
  allow_failure: true




Build Develop:
  stage: build_test
  script:
    # The following is for Amazon's registry
    - sudo $(sudo aws ecr get-login --region $Region --registry-ids 137112412989 | awk '{printf $1" "$2" "$3" "$4" "$5" "$6" "$9}')
    # The following is for my registry
    - sudo $(sudo aws ecr get-login | awk '{printf $1" "$2" "$3" "$4" "$5" "$6" "$9}')
    - sudo docker build -f 1-develop.Dockerfile -t $IMAGE_NAME:build .
  only:
    - develop


Build Test:
  stage: build_test
  script:
    # The following is for Amazon's registry
    - sudo $(sudo aws ecr get-login --region $Region --registry-ids 137112412989 | awk '{printf $1" "$2" "$3" "$4" "$5" "$6" "$9}')
    # The following is for my registry
    - sudo $(sudo aws ecr get-login | awk '{printf $1" "$2" "$3" "$4" "$5" "$6" "$9}')
    - sudo docker build -f 2-test.Dockerfile -t $IMAGE_NAME:build .
  only:
    - test

Copy Test:
  stage: build_test
  script:
    - docker run --rm $IMAGE_NAME:build -v /opt/efs/plugins "\cp /opt/okta_system_log/*.gem /opt/efs/plugins/*-test.gem"
  only:
    - test







Build Master:
  stage: build_test
  script:
    # The following is for Amazon's registry
    - sudo $(sudo aws ecr get-login --region $Region --registry-ids 137112412989 | awk '{printf $1" "$2" "$3" "$4" "$5" "$6" "$9}')
    # The following is for my registry
    - sudo $(sudo aws ecr get-login | awk '{printf $1" "$2" "$3" "$4" "$5" "$6" "$9}')
    - sudo docker build -f 3-master.Dockerfile -t $IMAGE_NAME:build .
  only:
    - master


Copy Master:
  stage: build_test
  script:
    - docker run --rm $IMAGE_NAME:build -v /opt/efs/plugins "\cp /opt/okta_system_log/*.gem /opt/efs/plugins/"
  only:
    - master




Push image develop to Registry:
  stage: deploy
  script:
    - sudo docker tag $IMAGE_NAME:build 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:develop
    - sudo docker push 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:develop || sudo aws ecr create-repository --repository-name $IMAGE_NAME --region $Region; sudo docker push 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:develop
    - sudo docker tag $IMAGE_NAME:build 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:Pipeline_$CI_PIPELINE_ID
    - sudo docker push 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:Pipeline_$CI_PIPELINE_ID
  only:
    - develop



Push image test to Registry:
  stage: deploy
  script:
    - sudo docker tag $IMAGE_NAME:build 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:test
    - sudo docker push 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:test || sudo aws ecr create-repository --repository-name $IMAGE_NAME --region $Region; sudo docker push 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:test
    - sudo docker tag $IMAGE_NAME:build 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:Pipeline_$CI_PIPELINE_ID
    - sudo docker push 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:Pipeline_$CI_PIPELINE_ID
  only:
    - test




Push image latest to Registry:
  stage: deploy
  script:
    - sudo docker tag $IMAGE_NAME:build 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:latest
    - sudo docker push 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:latest || sudo aws ecr create-repository --repository-name $IMAGE_NAME --region $Region; sudo docker push 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:latest
    - sudo docker tag $IMAGE_NAME:build 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:Pipeline_$CI_PIPELINE_ID
    - sudo docker push 383707766587.dkr.ecr.$Region.amazonaws.com/$IMAGE_NAME:Pipeline_$CI_PIPELINE_ID
  only:
    - master


